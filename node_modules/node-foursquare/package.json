{
  "_args": [
    [
      {
        "raw": "node-foursquare@^0.3.0",
        "scope": null,
        "escapedName": "node-foursquare",
        "name": "node-foursquare",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "/Users/claudius/Documents/workspace/_WEBAPPS/imagetagging/hackathon-starter"
    ]
  ],
  "_from": "node-foursquare@>=0.3.0 <0.4.0",
  "_id": "node-foursquare@0.3.0",
  "_inCache": true,
  "_location": "/node-foursquare",
  "_npmUser": {
    "name": "clintandrewhall",
    "email": "clint@clintandrewhall.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-foursquare@^0.3.0",
    "scope": null,
    "escapedName": "node-foursquare",
    "name": "node-foursquare",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-foursquare/-/node-foursquare-0.3.0.tgz",
  "_shasum": "2ccbecb2ae6f604017459302695bfada377afdef",
  "_shrinkwrap": null,
  "_spec": "node-foursquare@^0.3.0",
  "_where": "/Users/claudius/Documents/workspace/_WEBAPPS/imagetagging/hackathon-starter",
  "author": {
    "name": "Clint Andrew Hall",
    "url": "http://www.clintandrewhall.com"
  },
  "bugs": {
    "url": "https://github.com/clintandrewhall/node-foursquare/issues"
  },
  "dependencies": {
    "winston": "0.6.x"
  },
  "description": "Fault-tolerant Foursquare/Swarm API v2 wrapper for Node JS.",
  "devDependencies": {
    "express": "2.5.x"
  },
  "directories": {
    "lib": "./lib",
    "doc": "./doc"
  },
  "dist": {
    "shasum": "2ccbecb2ae6f604017459302695bfada377afdef",
    "tarball": "https://registry.npmjs.org/node-foursquare/-/node-foursquare-0.3.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.x"
  },
  "gitHead": "e3d7d4b22cf78428974b177d5fc82c7215649454",
  "homepage": "https://github.com/clintandrewhall/node-foursquare",
  "keywords": [
    "node-foursquare",
    "foursquare",
    "swarm",
    "4sq"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/clintandrewhall/node-foursquare/raw/master/LICENSE"
    }
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "clintandrewhall",
      "email": "clint@clintandrewhall.com"
    }
  ],
  "name": "node-foursquare",
  "optionalDependencies": {},
  "readme": "node-foursquare\n==================\n\nFault-tolerant Foursquare API wrapper for Node JS.\n\n\nInstall\n-------\n\n    npm install node-foursquare\n\nVersion History\n---------------\n\n*  v0.0.1 - First release\n*  v0.0.2 - Bug Fixes and Downstream Merges\n*  v0.1.0 - Suggested Refactoring and latest endpoints from Foursquare (VERY NON-PASSIVE)\n    * Surround results with field name.\n    * Userless Access Tokens (for Venues.explore, etc).\n    * Ability to load single portions of the library, (e.g. only import Venues).\n    * Users - Leaderboard, Requests\n    * Venues - Categories, Explore\n*  v0.1.1 - Support for Foursquare API Version + Deprecation Warnings (via configuration).\n*  v0.1.2 - Added new mayorships endpoint, removed extraneous field from User.getBadges (non-passive).\n*  v0.1.3 - Added Updates endpoint, updated to log4js v0.3.x.\n*  v0.1.4 - Added Lists and Events endpoints.\n*  v0.2.0 - Overhaul\n    * Replaced log4js with winston.\n    * Added new endpoints, modules, methods.\n    * Refactored testing suite.\n*  v0.2.1 - Unit test fixes and bugs/merges\n*  v0.3.0 - Remove deprecated Foursquare API endpoints, support new parameters.\n\nUse\n---\n\nThe Foursquare module takes a configuration parameter containing logging and\nclient keys. It also supports alternate Foursquare URLs if necessary, (but that\nis unlikely).\n\n    var config = {\n      'secrets' : {\n        'clientId' : 'CLIENT_ID',\n        'clientSecret' : 'CLIENT_SECRET',\n        'redirectUrl' : 'REDIRECT_URL'\n      }\n    }\n\n    var foursquare = require('node-foursquare')(config);\n\nOnce instantiated, you just need to set up endpoints on your own server that\nmatch your OAuth configuration in Foursquare.  Using Express, for example:\n\n    var app = express();\n\n    app.get('/login', function(req, res) {\n      res.writeHead(303, { 'location': foursquare.getAuthClientRedirectUrl() });\n      res.end();\n    });\n\n\n    app.get('/callback', function (req, res) {\n      foursquare.getAccessToken({\n        code: req.query.code\n      }, function (error, accessToken) {\n        if(error) {\n          res.send('An error was thrown: ' + error.message);\n        }\n        else {\n          // Save the accessToken and redirect.\n        }\n      });\n    });\n\nFoursquare API Version and Deprecation Warnings\n-----------------------------------------------\n\nFoursquare allows consumers to specify a 'version' of their API to invoke,\nbased on the date that version became active. For example, passing a version\nstring of '20110101' uses the API as of Jan 1, 2011.  By default, this library\nwill use a version of '20140806', the minimum date for the Foursquare/Swarm\nmigration.\n\nTo enable a different version of the API, add the following to configuration:\n\n    var config = {\n      ...\n      'foursquare' : {\n        ...\n        'version' : '20140806',\n        ...\n      }\n      ...\n    }\n\n\nThe Foursquare API now supports a 'mode' parameter, either 'foursquare' or\n'swarm'.  This parameter is now required.  By default, this library will assume\n'foursquare'.  You can change this through configuration:\n\n    var config = {\n      ...\n      'foursquare' : {\n        ...\n        'mode' : 'swarm',\n        ...\n      }\n      ...\n    }\n\n\nWhen using an older API, Foursquare will provide deprecation warnings, (if\napplicable). By default, this library will write these warnings to the log,\nwhich will only be visible if logging for 'node-foursquare' is turned on, (see\n'Logging', below).\n\nYou can configure this library to throw an error instead:\n\n    var config = {\n      ...\n      'foursquare' : {\n        ...\n        'warnings' : 'ERROR',\n        ...\n      }\n      ...\n    }\n\n\nLogging\n-------\n\nThis module uses winston to log events. By default, the logging level is set to\n'none'.  If you  want to output logging messages from the different modules of\nthis library, you can add overrides to your configuration object.  For example,\nto log debug (and higher) messages in Venues and warnings in Core to the console:\n\n    var config = {\n      'winston' : {\n        'loggers': {\n           'core': {\n             'console': {\n               'level': 'warn'\n             }\n           },\n           'venues': {\n             'console': {\n               'level': 'debug'\n             }\n           }\n         }\n      ...\n    }\n\n    var foursquare = require('node-foursquare')(config);\n\nFor a list of existing logging points, refer to [config-default.js](https://github.com/clintandrewhall/node-foursquare/blob/master/lib/config-default.js).\n\nFor more information, see: https://github.com/flatiron/winston\n\nI18n\n----\n\nAdd locale param to config:\n\n    var config = {\n        ...\n        'locale' : 'it'\n        ...\n    }\n\nValid locales are listed in https://developer.foursquare.com/overview/versioning\n\nTesting\n-------\n\nTo test, you need to create a config.js file in the /test directory as follows:\n\n    module.exports = {\n      'secrets' : {\n        'clientId' : 'YOUR_CLIENT_ID',\n        'clientSecret' : 'YOUR_CLIENT_SECRET',\n        'redirectUrl' : 'http://localhost:3000/callback' // This should also be set in your OAuth profile.\n      }\n    };\n\nThen, simply invoke the test.js file with Node.JS:\n\n    node test.js\n\nIf you hit [http://localhost:3000](http://localhost:3000), you'll be redirected\nfor an authentication token.\n\nIf you hit [http://localhost:3000/test](http://localhost:3000/test), you'll\ntest the entire library with no authentication, (and get appropriate errors for\nprotected endpoints).\n\nTesting results will be logged to the console.\n\nAll tests use examples as suggested by the [Foursquare Endpoint Explorer](https://developer.foursquare.com/docs/explore.html).\n\nNotes\n-----\n\nThis module is a read-only subset of the full Foursquare API, but further\ncapability, (adding, posting, updating, etc), is forthcoming. Bugs and Pull\nRequests are, of course, accepted! :-)\n\nThis project is a refactoring and enhancement of:\nhttps://github.com/yikulju/Foursquare-on-node\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/clintandrewhall/node-foursquare.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "tags": [
    "node-foursquare",
    "foursquare",
    "swarm",
    "4sq"
  ],
  "version": "0.3.0"
}
