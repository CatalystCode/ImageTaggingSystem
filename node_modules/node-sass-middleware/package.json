{
  "_args": [
    [
      {
        "raw": "node-sass-middleware@^0.11.0",
        "scope": null,
        "escapedName": "node-sass-middleware",
        "name": "node-sass-middleware",
        "rawSpec": "^0.11.0",
        "spec": ">=0.11.0 <0.12.0",
        "type": "range"
      },
      "/Users/claudius/Documents/workspace/_WEBAPPS/imagetagging/hackathon-starter"
    ]
  ],
  "_from": "node-sass-middleware@>=0.11.0 <0.12.0",
  "_id": "node-sass-middleware@0.11.0",
  "_inCache": true,
  "_location": "/node-sass-middleware",
  "_nodeVersion": "0.12.18",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/node-sass-middleware-0.11.0.tgz_1484525158471_0.9001421157736331"
  },
  "_npmUser": {
    "name": "am11",
    "email": "adeelbm@outlook.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-sass-middleware@^0.11.0",
    "scope": null,
    "escapedName": "node-sass-middleware",
    "name": "node-sass-middleware",
    "rawSpec": "^0.11.0",
    "spec": ">=0.11.0 <0.12.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-sass-middleware/-/node-sass-middleware-0.11.0.tgz",
  "_shasum": "2ab56124362941102e2cd54d8a1c1cef445afb15",
  "_shrinkwrap": null,
  "_spec": "node-sass-middleware@^0.11.0",
  "_where": "/Users/claudius/Documents/workspace/_WEBAPPS/imagetagging/hackathon-starter",
  "author": {
    "name": "Andrew Nesbitt",
    "email": "andrewnez@gmail.com",
    "url": "http://andrew.github.com"
  },
  "bugs": {
    "url": "https://github.com/sass/node-sass-middleware/issues"
  },
  "dependencies": {
    "mkdirp": "^0.5.1",
    "node-sass": "^4.3.0"
  },
  "description": "Connect middleware for node-sass",
  "devDependencies": {
    "connect": "^3.5.0",
    "express": "^4.14.0",
    "mocha": "^3.2.0",
    "should": "^11.1.2",
    "supertest": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "2ab56124362941102e2cd54d8a1c1cef445afb15",
    "tarball": "https://registry.npmjs.org/node-sass-middleware/-/node-sass-middleware-0.11.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "a373cf61373363b01efc84b95398f5c49dea23e4",
  "homepage": "https://github.com/sass/node-sass-middleware",
  "keywords": [
    "sass",
    "css",
    "libsass"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sass/node-sass-middleware/blob/master/LICENSE"
    }
  ],
  "main": "./middleware.js",
  "maintainers": [
    {
      "name": "am11",
      "email": "adeelbm@outlook.com"
    },
    {
      "name": "andrewnez",
      "email": "andrewnez@gmail.com"
    },
    {
      "name": "keithamus",
      "email": "npm@keithcirkel.co.uk"
    }
  ],
  "name": "node-sass-middleware",
  "optionalDependencies": {},
  "readme": "#node-sass-middleware\n\nConnect/Express middleware for [node-sass](https://github.com/sass/node-sass).\n\n[![Build Status](https://travis-ci.org/sass/node-sass-middleware.svg?branch=master&style=flat)](https://travis-ci.org/sass/node-sass-middleware)\n[![npm version](https://badge.fury.io/js/node-sass-middleware.svg)](http://badge.fury.io/js/node-sass-middleware)\n[![Dependency Status](https://david-dm.org/sass/node-sass-middleware.svg?theme=shields.io)](https://david-dm.org/sass/node-sass-middleware)\n[![devDependency Status](https://david-dm.org/sass/node-sass-middleware/dev-status.svg?theme=shields.io)](https://david-dm.org/sass/node-sass-middleware#info=devDependencies)\n[![Gitter chat](http://img.shields.io/badge/gitter-sass/node--sass-brightgreen.svg)](https://gitter.im/sass/node-sass)\n\n## Install\n\n    npm install node-sass-middleware\n\n## Usage\n\nRecompile `.scss` or `.sass` files automatically for connect and express based http servers.\n\n### Connect example\n\n```javascript\nvar connect = require('connect')\nvar sassMiddleware = require('node-sass-middleware')\nvar server = connect.createServer(\n  sassMiddleware({\n      /* Options */\n      src: __dirname\n    , dest: __dirname + '/public'\n    , debug: true\n    , outputStyle: 'compressed'\n    , prefix:  '/prefix'  // Where prefix is at <link rel=\"stylesheets\" href=\"prefix/style.css\"/>\n  }),\n  connect.static('/prefix', __dirname + '/public')\n);\n```\n\nThere is an example connect app here: <https://github.com/andrew/node-sass-example>\n\nHeavily inspired by <https://github.com/LearnBoost/stylus>\n\n### Express example\n\n```javascript\nvar express = require('express');\nvar sassMiddleware = require('node-sass-middleware');\nvar path = require('path');\nvar app = express();\napp.use(sassMiddleware({\n    /* Options */\n    src: __dirname,\n    dest: path.join(__dirname, 'public'),\n    debug: true,\n    outputStyle: 'compressed',\n    prefix:  '/prefix'  // Where prefix is at <link rel=\"stylesheets\" href=\"prefix/style.css\"/>\n}));\n// Note: you must place sass-middleware *before* `express.static` or else it will\n// not work.\napp.use('/public', express.static(path.join(__dirname, 'public')));\n```\n\n### Connect with other middleware example\n\n```javascript\nvar connect = require('connect');\nvar sassMiddleware = require('node-sass-middleware');\nvar postcssMiddleware = require('postcss-middleware');\nvar autoprefixer = require('autoprefixer');\nvar path = require('path');\nvar http = require('http');\nvar app = connect();\nvar destPath = __dirname + '/public';\napp.use(sassMiddleware({\n    /* Options */\n    src: __dirname\n  , response: false\n  , dest: destPath\n  , outputStyle: 'extended'\n}));\napp.use(postcssMiddleware({\n  plugins: [\n    /* Plugins */\n    autoprefixer({\n      /* Options */\n    })\n  ],\n  src: function(req) {\n    return path.join(destPath, req.url);\n  }\n}));\n\nhttp.createServer(app).listen(3000);\n```\n\n### Options\n\n *    `src`            - (String) Source directory used to find `.scss` or `.sass` files.\n *    optional configurations:\n  *    `dest`           - (String) Destination directory used to output `.css` files (when undefined defaults to `src`).\n  *    `root`           - (String) A base path for both source and destination directories.\n  *    `prefix`         - (String) It will tell the sass middleware that any request file will always be prefixed with `<prefix>` and this prefix should be ignored.\n  *    `force`          - `[true | false]`, false by default. Always re-compile.\n  *    `debug`          - `[true | false]`, false by default. Output debugging information.\n  *    `indentedSyntax` - `[true | false]`, false by default. Compiles files with the `.sass` extension instead of `.scss` in the `src` directory.\n  *    `response`       - `[true | false]`, true by default. To write output directly to response instead of to a file.\n  *    `error`          - A function to be called when something goes wrong.\n  *    `maxAge`         - MaxAge to be passed in Cache-Control header.\n  *    `log`            - `function(severity, key, val)`, used to log data instead of the default `console.error`\n\n\n  For full list of options from original node-sass project go [here](https://github.com/sass/node-sass).\n  \n### Express example with custom log function\n\n```javascript\nvar express = require('express');\nvar sassMiddleware = require('node-sass-middleware');\nvar path = require('path');\nvar winston = require('winston');\nvar app = express();\nwinston.level = 'debug';\napp.use(sassMiddleware({\n    /* Options */\n    src: __dirname,\n    dest: path.join(__dirname, 'public'),\n    debug: true,\n    log: function (severity, key, value) { winston.log(severity, 'node-saas-middleware   %s : %s', key, value); }\n}));\n// Note: you must place sass-middleware *before* `express.static` or else it will\n// not work.\napp.use(express.static(path.join(__dirname, 'public')));\n```\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here](https://github.com/sass/node-sass-middleware/graphs/contributors).\n\n### Building and Testing\n\n```sh\ngit clone git@github.com:sass/node-sass-middleware\ncd node-sass-middleware\n\nnpm install\nnpm test\n```\n\n### Note on Patches/Pull Requests\n\n * Fork the project.\n * Make your feature addition or bug fix.\n * Add documentation if necessary.\n * Add tests for it. This is important so I don't break it in a future version unintentionally.\n * Send a pull request. Bonus points for topic branches.\n\n## Copyright\n\nCopyright (c) 2013+ Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass-middleware/blob/master/LICENSE) for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/sass/node-sass-middleware.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.11.0"
}
